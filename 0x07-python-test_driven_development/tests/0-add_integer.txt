=================================
 Test for module 0-add_integer.py
=================================

Import module:
    >>> add_integer = __import__('0-add_integer').add_integer

Cases:
    >>> add_integer(8, 5)
    13
    
    >>> add_integer(95.2, 8)
    103
    
    >>> add_integer(95.2, 95.2)
    190
    
    >>> add_integer(8, 95.2)
    103
    
    >>> add_integer(True, 8)
    Traceback (most recent call last):
    TypeError: a must be an integer
    
    >>> add_integer(8, True)
    Traceback (most recent call last):
    TypeError: b must be an integer
    
    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer
    
    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'
    
    >>> add_integer("Hola", 95)
    Traceback (most recent call last):
    TypeError: a must be an integer
    
    >>> add_integer(95, "Hola")
    Traceback (most recent call last):
    TypeError: b must be an integer
    
    >>> add_integer(99e999, 8)
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
    
    >>> add_integer(9, 8, 3)
    Traceback (most recent call last):
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
    